pipeline {
    agent any

    environment {
        DOCKER_HUB_CREDENTIALS = 'dockerhub_cred'
        DOCKER_HUB_REPO_FRONTEND = 'sragzhran/frontend_depi_project'
        DOCKER_HUB_REPO_BACKEND = 'sragzhran/backend_depi_project'
        IMAGE_TAG = "V${env.BUILD_NUMBER}"
        AWS_ACCESS_KEY_ID = credentials('aws-access-key-id')  // Ensure 'aws-access-key-id' matches the credentials ID in Jenkins
        AWS_SECRET_ACCESS_KEY = credentials('aws-secret-access-key')  // Ensure 'aws-secret-access-key' matches the credentials ID in Jenkins
        AWS_REGION = 'us-east-1'
        TERRAFORM_BACKEND_BUCKET = "terraform-state-actions"

    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(
                    branches: [[name: '*/main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        credentialsId: 'github-cred', 
                        url: 'https://github.com/SragZhran73/DEPI-DevOps-FP-G3.git'
                    ]]
                )
            }
        }


    stages {
        stage('S3 for Backend Configure') { 
            steps {
                script {
                    sh '''
                    # Create S3 Bucket
                    aws s3api create-bucket --bucket $TERRAFORM_BACKEND_BUCKET --region $AWS_REGION --create-bucket-configuration LocationConstraint=$AWS_REGION

                    # Enable S3 Bucket Versioning
                    aws s3api put-bucket-versioning --bucket $TERRAFORM_BACKEND_BUCKET --versioning-configuration Status=Enabled

                    # Create DynamoDB Table
                    aws dynamodb create-table --table-name test-locks --attribute-definitions AttributeName=LockID,AttributeType=S --key-schema AttributeName=LockID,KeyType=HASH --billing-mode PAY_PER_REQUEST
                    '''
                }
            }
        }
    }



        stage('Terraform Plan') {
            steps {
                dir('Terraform') {  // Navigate to the directory containing the main.tf file
                    script {
                        sh '''
                        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
                        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
                        terraform init
                        terraform apply -auto-approve
                        '''
                    }
                }
            }
        }
    }
}